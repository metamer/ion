# Generated by Django 2.1.2 on 2018-11-10 18:10

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import mptt.fields


class Migration(migrations.Migration):

    replaces = [('website', '0001_initial'), ('website', '0002_auto_20150212_0029'), ('website', '0003_page_page_shortname'), ('website', '0004_auto_20150212_0214'), ('website', '0005_genre'), ('website', '0006_auto_20150228_1603'), ('website', '0007_remove_page_page_category'), ('website', '0008_page_page_category'), ('website', '0009_remove_page_page_category'), ('website', '0010_page_page_category'), ('website', '0011_auto_20150301_1641'), ('website', '0012_auto_20150301_1649'), ('website', '0013_auto_20150301_1653'), ('website', '0014_auto_20150301_2305'), ('website', '0015_auto_20150301_2340'), ('website', '0016_auto_20150301_2341'), ('website', '0017_auto_20150301_2342'), ('website', '0018_auto_20150301_2343'), ('website', '0019_auto_20150627_0008'), ('website', '0020_auto_20150627_0019'), ('website', '0021_auto_20150627_0026'), ('website', '0022_auto_20150627_0032'), ('website', '0023_auto_20150710_0027'), ('website', '0024_auto_20150710_0044'), ('website', '0025_auto_20150710_0059'), ('website', '0026_auto_20160202_2224'), ('website', '0027_auto_20181110_1235')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_text', models.TextField()),
                ('update_date', models.DateTimeField(verbose_name='date updated')),
                ('page_title', models.CharField(default='temp', max_length=200)),
                ('page_shortname', models.CharField(default='top', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='PageCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^[\\w]+$', message='category name must be alphanumeric')])),
                ('category_desc', models.CharField(default='Top level', max_length=200)),
                ('level', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
                ('lft', models.PositiveIntegerField(db_index=True, default=1, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='website.PageCategory')),
                ('rght', models.PositiveIntegerField(db_index=True, default=2, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
            ],
            options={
                'verbose_name_plural': 'Page Categories',
            },
        ),
        migrations.AddField(
            model_name='page',
            name='page_category',
            field=models.ForeignKey(default=17, on_delete=django.db.models.deletion.PROTECT, to='website.PageCategory'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='page',
            name='page_description',
            field=models.CharField(blank=True, help_text='Description of page', max_length=500),
        ),
        migrations.AddField(
            model_name='page',
            name='pub_date',
            field=models.DateTimeField(help_text='Date page was first published', verbose_name='date published'),
        ),
        migrations.AddField(
            model_name='page',
            name='update_comment',
            field=models.CharField(blank=True, help_text='Changes made during last update', max_length=500),
        ),
        migrations.AlterField(
            model_name='page',
            name='page_shortname',
            field=models.CharField(help_text='Short name of page (no special chars or spaces). This will be used for the url location of the page. Use _ to separate words.', max_length=20),
        ),
        migrations.AlterField(
            model_name='page',
            name='page_text',
            field=models.TextField(help_text='HTML content of page'),
        ),
        migrations.AlterField(
            model_name='page',
            name='page_title',
            field=models.CharField(help_text='Title of the page', max_length=200),
        ),
        migrations.AlterField(
            model_name='page',
            name='update_date',
            field=models.DateTimeField(default=datetime.datetime(2015, 3, 1, 21, 41, 9, 948664, tzinfo=utc), help_text='Date page was last updated', verbose_name='date updated'),
        ),
        migrations.AlterField(
            model_name='page',
            name='page_shortname',
            field=models.CharField(help_text='Short name of page (no special chars or spaces). This will be used for the url location of the page. Use _ to separate words.', max_length=20, validators=[django.core.validators.RegexValidator('[\\w]+', message='shortname must be alphanumeric')]),
        ),
        migrations.AlterField(
            model_name='page',
            name='update_date',
            field=models.DateTimeField(default=datetime.datetime(2015, 3, 1, 21, 49, 48, 890360, tzinfo=utc), help_text='Date page was last updated', verbose_name='date updated'),
        ),
        migrations.AlterField(
            model_name='page',
            name='page_shortname',
            field=models.CharField(help_text='Short name of page (no special chars or spaces). This will be used for the url location of the page. Use _ to separate words.', max_length=20, validators=[django.core.validators.RegexValidator('^[\\w]+$', message='shortname must be alphanumeric')]),
        ),
        migrations.AlterField(
            model_name='page',
            name='update_date',
            field=models.DateTimeField(default=datetime.datetime(2015, 3, 1, 21, 53, 17, 109721, tzinfo=utc), help_text='Date page was last updated', verbose_name='date updated'),
        ),
        migrations.AlterField(
            model_name='page',
            name='update_date',
            field=models.DateTimeField(default=datetime.datetime(2015, 3, 2, 4, 5, 21, 506733, tzinfo=utc), help_text='Date page was last updated', verbose_name='date updated'),
        ),
        migrations.CreateModel(
            name='NewsEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the news entry', max_length=200)),
                ('text', models.TextField(help_text='HTML content of page')),
                ('pub_date', models.DateTimeField(auto_now=True, help_text='Date page was first published', verbose_name='date published')),
            ],
            options={
                'verbose_name_plural': 'News Entries',
            },
        ),
        migrations.AlterField(
            model_name='page',
            name='update_date',
            field=models.DateTimeField(default=datetime.datetime(2015, 3, 2, 4, 40, 39, 473373, tzinfo=utc), help_text='Date page was last updated', verbose_name='date updated'),
        ),
        migrations.AlterField(
            model_name='page',
            name='update_date',
            field=models.DateTimeField(default=datetime.datetime(2015, 3, 2, 4, 41, 44, 972528, tzinfo=utc), help_text='Date page was last updated', verbose_name='date updated'),
        ),
        migrations.AlterField(
            model_name='page',
            name='update_date',
            field=models.DateTimeField(help_text='Date page was last updated', verbose_name='date updated'),
        ),
        migrations.AlterField(
            model_name='page',
            name='page_text',
            field=models.TextField(blank=True, help_text='HTML content of page'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField(help_text='Link to commented page')),
                ('link_title', models.CharField(help_text='Title of linked page ', max_length=200)),
                ('text', models.TextField(help_text='HTML comment')),
                ('pub_date', models.DateTimeField(auto_now=True, help_text='Date comment was first published', verbose_name='date published')),
            ],
        ),
        migrations.AlterField(
            model_name='page',
            name='update_date',
            field=models.DateTimeField(auto_now=True, help_text='Date page was last updated', verbose_name='date updated'),
        ),
        migrations.CreateModel(
            name='GenericLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=200)),
                ('link', models.URLField(help_text='Link')),
            ],
        ),
        migrations.CreateModel(
            name='LicenseUsage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(help_text='Name of item', max_length=200)),
                ('source_name', models.CharField(help_text='Name of source', max_length=200)),
                ('source_link', models.URLField(help_text='Link to commented page')),
                ('attribution', models.TextField(help_text='HTML for attribution')),
                ('usage', models.TextField(help_text='HTML for usage')),
                ('notes', models.TextField(help_text='HTML for notes')),
            ],
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('genericlink_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='website.GenericLink')),
            ],
            bases=('website.genericlink',),
        ),
        migrations.AddField(
            model_name='licenseusage',
            name='license',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='website.License'),
        ),
        migrations.AlterField(
            model_name='licenseusage',
            name='notes',
            field=models.TextField(blank=True, help_text='HTML for notes'),
        ),
        migrations.AlterModelManagers(
            name='pagecategory',
            managers=[
            ],
        ),
    ]
